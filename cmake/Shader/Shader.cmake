function(vadon_generate_embedded_shader_source SHADER_TARGET SHADER_FILE SHADER_SOURCE_NAMESPACE)
	file(READ ${SHADER_FILE} SHADER_FILE_CONTENT)
	
	# FIXME: extract this to its own function?
	file(RELATIVE_PATH SHADER_INCLUDE_PATH ${PROJECT_SOURCE_DIR}/render ${CMAKE_CURRENT_SOURCE_DIR})

	get_filename_component(SHADER_FILE_NAME ${SHADER_FILE} NAME_WE)
	# FIXME: path to custom CMake scripts root should be in a variable!
	configure_file(${CMAKE_SOURCE_DIR}/cmake/Shader/Shader.cpp.in ${SHADER_FILE_NAME}.cpp @ONLY)
	target_sources(${SHADER_TARGET}
	PRIVATE
	${CMAKE_CURRENT_BINARY_DIR}/${SHADER_FILE_NAME}.cpp
	)
endfunction()

function(vadon_compile_shader_to_object_files SHADER_FILE SHADER_TARGET)
endfunction()

function(vadon_compile_shader_to_embedded SOURCE_LIST ROOT_DIR CODEGEN_DIR SHADER_FILE SHADER_TARGET SHADER_ENTRYPOINT SHADER_NAMESPACE)
	cmake_path(ABSOLUTE_PATH SHADER_FILE OUTPUT_VARIABLE SHADER_FILE_ABS_PATH)
	
	cmake_path(GET SHADER_FILE_ABS_PATH PARENT_PATH SHADER_FILE_ABS_PARENT_PATH)
	cmake_path(RELATIVE_PATH SHADER_FILE_ABS_PARENT_PATH BASE_DIRECTORY ${ROOT_DIR} OUTPUT_VARIABLE SHADER_FILE_PARENT_REL_PATH)

	get_filename_component(SHADER_FILE_NAME ${SHADER_FILE} NAME_WE)

	if(${SHADER_TARGET} STREQUAL "VERTEX")
		set(OUTPUT_FILE_NAME "${SHADER_FILE_NAME}_VS")
	elseif(${SHADER_TARGET} STREQUAL "PIXEL")
		set(OUTPUT_FILE_NAME "${SHADER_FILE_NAME}_PS")
	else()
		message(FATAL_ERROR "Invalid target!")
	endif()

	set(SHADER_OUTPUT_PATH "${CODEGEN_DIR}/${SHADER_FILE_PARENT_REL_PATH}")

	set(OUTPUT_FILE_FULL_PATH "${SHADER_OUTPUT_PATH}/${OUTPUT_FILE_NAME}.hpp")

	add_custom_command(OUTPUT ${OUTPUT_FILE_FULL_PATH}
		COMMAND VadonTools::VadonShaderCompiler ${ROOT_DIR} ${SHADER_FILE_ABS_PATH} ${OUTPUT_FILE_FULL_PATH} ${SHADER_TARGET} ${SHADER_ENTRYPOINT} "cpp" ${SHADER_NAMESPACE}
		DEPENDS ${SHADER_FILE}
		DEPFILE "${SHADER_OUTPUT_PATH}/${OUTPUT_FILE_NAME}.d"
	)

	list(APPEND ${SOURCE_LIST} ${OUTPUT_FILE_FULL_PATH})

	set(${SOURCE_LIST} "${${SOURCE_LIST}}" PARENT_SCOPE)
endfunction()