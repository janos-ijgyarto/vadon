MESSAGE("Building Vadon Game Demo")

set(VADONDEMO_CURRENT_TARGET "VadonDemoGame")

if(WIN32)
	MESSAGE("Building from Windows")
# TODO: Windows-specific instructions
elseif(UNIX AND NOT APPLE)
	MESSAGE("Building from Linux")
# TODO: Linux-specific instructions
endif()

include(${VADON_TOOLS_EXPORT_FILE_DIR}/VadonShaderCompiler.cmake)

add_executable(${VADONDEMO_CURRENT_TARGET})

set(VADONDEMO_SHADERS_TARGET "VadonDemoShaders")
add_custom_target(${VADONDEMO_SHADERS_TARGET})

add_dependencies(${VADONDEMO_SHADERS_TARGET} "VadonToolsBuild")
set_target_properties(${VADONDEMO_SHADERS_TARGET} PROPERTIES FOLDER "${VADON_PARENT_FOLDER}${PROJECT_NAME}/Codegen")

add_dependencies(${VADONDEMO_CURRENT_TARGET} ${VADONDEMO_SHADERS_TARGET})

set(VADONDEMO_SHADERS_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(VADONDEMO_CODEGEN_DIR "${CMAKE_CURRENT_BINARY_DIR}/codegen")
set(VADONDEMO_SHADER_OUTPUT_DIR "${VADONDEMO_CODEGEN_DIR}/shaders")

add_subdirectory(VadonDemo)

get_property("VADONGAMEDEMO_SOURCES" TARGET ${VADONDEMO_CURRENT_TARGET} PROPERTY SOURCES)
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${VADONGAMEDEMO_SOURCES})

target_compile_features(${VADONDEMO_CURRENT_TARGET} PRIVATE cxx_std_20)
target_include_directories(${VADONDEMO_CURRENT_TARGET} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} ${VADONDEMO_SHADER_OUTPUT_DIR})

set(VADONGAMEDEMO_LIBRARIES VadonApp VadonDemoCommon)
target_link_libraries(${VADONDEMO_CURRENT_TARGET} PRIVATE ${VADONGAMEDEMO_LIBRARIES})

if(MSVC)
  target_compile_options(${VADONDEMO_CURRENT_TARGET} PRIVATE /W4 /WX /wd4554)
endif()
	
if(WIN32)
	target_compile_definitions(${VADONDEMO_CURRENT_TARGET} PRIVATE VADONDEMO_PLATFORM_WIN32)
	
    # Enable console window for debug builds, disable in release
    set(SUBSYSTEM_LINKER_OPTIONS "$<IF:$<CONFIG:Debug>,/SUBSYSTEM:CONSOLE,/SUBSYSTEM:WINDOWS>" "/ENTRY:mainCRTStartup")
else()
	# Enable console window for debug builds, disable in release
    set(SUBSYSTEM_LINKER_OPTIONS "$<IF:$<NOT:$<CONFIG:Debug>>,-mwindows,>")
endif()

target_link_options(${VADONDEMO_CURRENT_TARGET} PRIVATE ${SUBSYSTEM_LINKER_OPTIONS})

if(UNIX AND NOT APPLE)
	target_compile_definitions(${VADONDEMO_CURRENT_TARGET} PRIVATE VADONDEMO_PLATFORM_LINUX)
endif()

# TODO: Mac support?

set_target_properties(${VADONDEMO_CURRENT_TARGET} PROPERTIES FOLDER ${VADON_PARENT_FOLDER}${PROJECT_NAME})

set(VADONDEMO_INSTALL_RUNTIME_PREFIX "Game")
set(VADONDEMO_INSTALL_GAME_COMPONENT "VadonDemoGame")

install(TARGETS ${VADONDEMO_CURRENT_TARGET} RUNTIME COMPONENT ${VADONDEMO_INSTALL_GAME_COMPONENT} DESTINATION ${VADONDEMO_INSTALL_RUNTIME_PREFIX}/${VADON_INSTALL_RUNTIME_DESTINATION})

add_custom_target(VadonInstallDemoGame
    DEPENDS ${VADONDEMO_CURRENT_TARGET}
    COMMAND "${CMAKE_COMMAND}" 
            -DCMAKE_INSTALL_COMPONENT="${VADONDEMO_INSTALL_GAME_COMPONENT}"
            -P "${CMAKE_BINARY_DIR}/cmake_install.cmake"
    COMMAND "${CMAKE_COMMAND}" 
            -DCMAKE_INSTALL_COMPONENT="${VADON_INSTALL_THIRD_PARTY_COMPONENT}"
            -DCMAKE_INSTALL_PREFIX="${CMAKE_INSTALL_PREFIX}/${VADONDEMO_INSTALL_RUNTIME_PREFIX}"
            -P "${CMAKE_BINARY_DIR}/cmake_install.cmake"
     )
set_target_properties("VadonInstallDemoGame" PROPERTIES FOLDER ${VADON_PARENT_FOLDER}${PROJECT_NAME})